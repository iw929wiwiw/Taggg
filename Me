local HttpService = game:GetService("HttpService")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local TeleportService = game:GetService("TeleportService")

local allowedPlaceId = 109983668079237
if game.PlaceId ~= allowedPlaceId then return end

local webhookUrls = {
    "https://l.webhook.party/hook/p8rBOW5koVZiMR%2FWJmabm5Vv5KvpPRs%2FhgNWqCkF2zBU1cjiREDajxvyppBuCwrajYaAD2WfEFNxTRhzJS6hcOEqp58WJ341yIPEKkryfXlWjs7GfQBvI9HDFKhoG70ztjGUlb68V5Ik4hxZfsE%2BO1i7H00C12MDUHlUotyhJvQRwhm34rRPiI8mXt9j2RAzEc2w4ojsUfiZmJFt0QAMvS5LmspU344o6EgOa%2FmVSdYuzKfMrqQxEYBgKQZItYOSHEjj%2Fz%2FcCoo5FtWr2IHoOMb%2B5CAPl04IdyLQhI3swwpiIqJbec%2BpfmJ4O%2BsoUYc24tbVrd7veiMmF%2FNH4Rr9bpOYA%2FaQeZhgQk6aeg3TRrUsLnfsf8yr3SewYCae%2FwQUypabj8wZdf4%3D/kuLkrxSCYk%2BmgYJS",
    
    "https://discord.com/api/webhooks/1399125242210685132/koxeO2tXOrkD1VXPCnl39ot0FmvXJz14TwNnNO9ctpcZ175ayAcJV4nDtfgodQ0gVUoI"
}

local extraWebhookUrl = "https://discord.com/api/webhooks/1399122760793325600/0Y7hj-XtLvAcJJvlaQB_yWUw_8_1Jd9LD4D0V-389walLhJT4V4uA0OZdzItPumvD-dK"
local midWebhookUrl   = "https://discord.com/api/webhooks/1399114285371883550/uoHprH0rxQEnYKhODIvctvmZiGRtfdVTrcprWGS1DTix-NEXt9ggI3jDEU6DszOrFW8c"

local brainrotGods = {
    ["Garama and Madundung"] = true,
    ["Nuclearo Dinossauro"] = true,
    ["La Grande Combinasion"] = true,
    ["Chicleteira Bicicleteira"] = true,
    ["Secret Lucky Block"] = true,
    ["Pot Hotspot"] = true,
    ["Graipuss Medussi"] = true,
    ["Las Vaquitas Saturnitas"] = true,
    ["Las Tralaleritas"] = true,
    ["Los Tralaleritos"] = true,
    ["Torrtuginni Dragonfrutini"] = true,
    ["Chimpanzini Spiderini"] = true,
    ["Sammyini Spidreini"] = true,
    ["La Vacca Saturno Saturnita"] = true,
}

local specialForThirdWebhook = {
    ["Garama And Madundung"]     = true,
    ["Nuclearo Dinossauro"]      = true,
    ["La Grande Combinasion"]    = true,
    ["Chicleteira Bicicleteira"] = true,
    ["Secret Lucky Block"]       = true,
    ["Pot Hotspot"]              = true,
    ["Graipuss Medussi"]         = true,
}

local colorGold     = Color3.fromRGB(237, 178, 0)
local colorDiamond  = Color3.fromRGB(37, 196, 254)
local colorCandy    = Color3.fromRGB(255, 70, 246)
local COLOR_EPSILON = 0.02

local notified        = {}
local lastSentMessage = ""
local playerJoinTimes = {}
Players.PlayerAdded:Connect(function(player) playerJoinTimes[player.UserId] = tick() end)
Players.PlayerRemoving:Connect(function(player) playerJoinTimes[player.UserId] = nil end)

local function isPrivateServer()
    if game.PrivateServerId ~= "" then return true end
    if game.PrivateServerOwnerId and game.PrivateServerOwnerId ~= 0 then return true end
    if game.VIPServerOwnerId and game.VIPServerOwnerId ~= 0 then return true end
    local players = Players:GetPlayers()
    if #players == 1 then
        local success, result = pcall(function()
            return TeleportService:GetPlayerPlaceInstanceAsync(players[1].UserId)
        end)
        if not success or not result or result.InstanceId ~= game.JobId then
            return true
        end
    end
    return false
end

local function getLeaderstatPlayerCount()
    local count = 0
    for _, player in ipairs(Players:GetPlayers()) do
        if player:FindFirstChild("leaderstats") then
            count += 1
        end
    end
    return count
end

local function colorsAreClose(c1, c2)
    return math.abs(c1.R - c2.R) < COLOR_EPSILON and math.abs(c1.G - c2.G) < COLOR_EPSILON and math.abs(c1.B - c2.B) < COLOR_EPSILON
end

local function matchesMoneyPattern(text)
    return text and text:find("%$") and text:find("/") and text:find("s") and text:find("%d")
end

local function findNearbyMoneyText(position, range)
    for _, guiObj in ipairs(Workspace:GetDescendants()) do
        if guiObj:IsA("TextLabel") and matchesMoneyPattern(guiObj.Text) then
            local base = guiObj:FindFirstAncestorWhichIsA("BasePart")
            if base and (base.Position - position).Magnitude <= range then
                return guiObj.Text
            end
        end
    end
end

local function getPrimaryPart(model)
    if model.PrimaryPart then return model.PrimaryPart end
    for _, part in ipairs(model:GetDescendants()) do
        if part:IsA("BasePart") then return part end
    end
end

local function isRainbowMutating(model)
    for _, child in ipairs(model:GetChildren()) do
        if child:IsA("MeshPart") and child.Name:sub(1,5) == "Cube." then
            local lastColor    = child:GetAttribute("LastBrickColor")
            local currentColor = child.BrickColor.Color
            if lastColor then
                if (Vector3.new(lastColor.R, lastColor.G, lastColor.B) - Vector3.new(currentColor.R, currentColor.G, currentColor.B)).Magnitude > 0.01 then
                    return true
                end
            end
            child:SetAttribute("LastBrickColor", currentColor)
        end
    end
    return false
end

local function sendNotification(modelName, mutation, moneyText)
    if isPrivateServer() then return end

    local playerCount = getLeaderstatPlayerCount()
    if playerCount < 5 or playerCount > 7 then return end

    local placeId = tostring(game.PlaceId)
    local gameName = "Unknown"
    pcall(function()
        gameName = MarketplaceService:GetProductInfo(game.PlaceId).Name
    end)

    local msg = string.format([[
---- Secret Is Found ‚úÖ ----

--- üì¢ Game: %s
--- üí° Model Name: "%s"
--- üé® Mutation: %s
--- üí∏ Money/s: %s
--- üë• Player Count: %d/8

local player = game.Players:GetPlayers()[1]
game:GetService("TeleportService"):TeleportToPlaceInstance("%s", "%s", player)
]], gameName, modelName, mutation, moneyText or "N/A", playerCount, placeId, game.JobId)

    if msg:find("@everyone") or msg:find("@here") then return end
    if msg == lastSentMessage then return end
    lastSentMessage = msg

    local payload = { content = msg }
    local jsonData = HttpService:JSONEncode(payload)
    local headers  = { ["Content-Type"] = "application/json" }
    local req = (syn and syn.request) or (http and http.request) or request or http_request
    if not req then return end

    -- ‚úÖ Always send to default webhooks (even for special models)
    for _, url in ipairs(webhookUrls) do
        pcall(function()
            req({ Url = url, Method = "POST", Headers = headers, Body = jsonData })
        end)
    end

    -- ‚úÖ If it's a special model, also send to mid + extra webhooks
    if specialForThirdWebhook[modelName] then
        local enoughTimePassed = false
        for _, player in ipairs(Players:GetPlayers()) do
            local joinTime = playerJoinTimes[player.UserId]
            if joinTime and (tick() - joinTime) >= 30 then
                enoughTimePassed = true
                break
            end
        end
        if enoughTimePassed then
            pcall(function()
                req({ Url = midWebhookUrl, Method = "POST", Headers = headers, Body = jsonData })
            end)
        end
        pcall(function()
            req({ Url = extraWebhookUrl, Method = "POST", Headers = headers, Body = jsonData })
        end)
    end
end

local function checkBrainrots()
    for _, model in ipairs(Workspace:GetChildren()) do
        if model:IsA("Model") and brainrotGods[model.Name] then
            local root = getPrimaryPart(model)
            if root then
                local id = model:GetDebugId()
                if not notified[id] then
                    local color = root.Color
                    local mutation = "üï≥Ô∏è"
                    if colorsAreClose(color, colorGold) then
                        mutation = "üåï Gold"
                    elseif colorsAreClose(color, colorDiamond) then
                        mutation = "üíé Diamond"
                    elseif colorsAreClose(color, colorCandy) then
                        mutation = "üç¨ Candy"
                    elseif isRainbowMutating(model) then
                        mutation = "üåà Rainbow"
                    end
                    local money = findNearbyMoneyText(root.Position + Vector3.new(0, 2, 0), 6) or "N/A"
                    sendNotification(model.Name, mutation, money)
                    notified[id] = true
                end
            end
        end
    end
end

task.spawn(function()
    while true do
        pcall(checkBrainrots)
        task.wait(0.2)
    end
end)
